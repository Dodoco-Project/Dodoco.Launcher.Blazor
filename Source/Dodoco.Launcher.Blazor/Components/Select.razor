@namespace Dodoco.Launcher.Blazor

@code {

    [Parameter]
    public string Name { get; set; } = Guid.NewGuid().ToString();

    [Parameter]
    public string Label { get; set; } = string.Empty;

    [Parameter]
    public string? Selected { get; set; } = null;

    [Parameter]
    public List<string> Values { get; set; } = new List<string>();

    private bool Open { get; set; } = false;

}

<div class="flex flex-col gap-y-1">
    <label for="kraken" class="text-sm text-primary">Language</label>
    <div class="w-1/4 h-full relative [&_*::-webkit-scrollbar-thumb]:p-4" @onfocusout=@(() => this.Open = false)>
        <button class="w-full transition-colors inline-flex items-center justify-between px-4 py-2 rounded text-defaulttext bg-defaulttext/10 [&_svg]:w-[1rem] [&_svg]:text-primary border-2 border-transparent focus:(border-2 border-primary) hover:(bg-defaulttext/20)" @onfocus=@(() => this.Open = true) @onclick=@(() => this.Open = !this.Open)>
            <span>@this.Selected</span>
            <Ignis.Components.HeroIcons.Solid.ChevronDownIcon/>
        </button>
        @if (this.Open) {
            <div @onmousedown:preventDefault class="absolute mt-2 py-2 w-full rounded text-defaulttext backdrop-blur bg-defaulttext/10 overflow-hidden">
                <ul class="max-h-24 overflow-y-auto">
                    @for (int i = 0; i < this.Values.Count; i++) {
                        <li @onfocusout:preventDefault @onfocusout:stopPropagation @onmousedown=@(() => Console.WriteLine("Click")) tabindex="0" role="button" class="transition-colors w-full px-4 py-2 focus-within:(text-primary bg-defaulttext/20) hover:(text-primary bg-defaulttext/20)">
                            <label for=@this.Name class="block w-full">@this.Values[i]</label>
                        </li>
                    }
                </ul>
            </div>
        }
    </div>
</div>